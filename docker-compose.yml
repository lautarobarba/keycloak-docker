version: "3.8"
name: demo_keycloak
services:
  keycloak_db:
    container_name: keycloak_db
    image: keycloak_db:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./database_1/Dockerfile
    env_file: ./database_1/.env
    environment:
      - TZ=America/Argentina/Buenos_Aires
    restart: always
    ports:
      - ${DB1_PORT}:5432
    volumes:
      - ./database_1/database/data:/var/lib/postgresql/data
      - ./database_1/backups:/backups
    extra_hosts:
      - host.docker.internal:host-gateway

  nest_db:
    container_name: nest_db
    image: nest_db:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./database_2/Dockerfile
    env_file: ./database_2/.env
    environment:
      - TZ=America/Argentina/Buenos_Aires
    restart: always
    ports:
      - ${DB2_PORT}:5432
    volumes:
      - ./database_2/database/data:/var/lib/postgresql/data
      - ./database_2/backups:/backups
    extra_hosts:
      - host.docker.internal:host-gateway

  laravel_db:
    container_name: laravel_db
    image: laravel_db:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./database_3/Dockerfile
    env_file: ./database_3/.env
    environment:
      - TZ=America/Argentina/Buenos_Aires
    restart: always
    ports:
      - ${DB3_PORT}:5432
    volumes:
      - ./database_3/database/data:/var/lib/postgresql/data
      - ./database_3/backups:/backups
    extra_hosts:
      - host.docker.internal:host-gateway

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    depends_on:
      - keycloak_db
    restart: always
    env_file: ./keycloak/.env
    environment:
      # Credentials for admin account
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      # Enable health and metrics support
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true

      # Credentials for storing into an external database
      KC_DB: ${DBK_VENDOR}
      KC_DB_URL_HOST: ${DBK_HOST}
      KC_DB_URL_PORT: ${DBK_PORT}
      KC_DB_URL_DATABASE: ${DBK_NAME}
      KC_DB_USERNAME: ${DBK_USER}
      KC_DB_PASSWORD: ${DBK_PASSWORD}

    ports:
      - ${KEYCLOAK_PORT}:8080
    extra_hosts:
      - host.docker.internal:host-gateway

  next_app:
    container_name: next_app
    image: next_app:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./front_1/Dockerfile
    command: bash -c "npm install && npm run dev"
    restart: always
    env_file: ./front_1/.env
    environment:
      - PORT=${NEXT_PORT}
    ports:
      - ${NEXT_PORT}:${NEXT_PORT}
    volumes:
      - ./front_1/frontend:/app
    extra_hosts:
      - host.docker.internal:host-gateway

  react_app:
    container_name: react_app
    image: react_app:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./front_2/Dockerfile
    command: bash -c "npm install && npm run start"
    restart: always
    env_file: ./front_2/.env
    environment:
      - PORT=${REACT_PORT}
    ports:
      - ${REACT_PORT}:${REACT_PORT}
    volumes:
      - ./front_2/frontend:/app
    extra_hosts:
      - host.docker.internal:host-gateway
