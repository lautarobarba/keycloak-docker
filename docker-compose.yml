version: "3.8"
name: demo_keycloak
services:
  keycloak_db:
    container_name: keycloak_db
    image: keycloak_db:1.0.0
    build:
      context: .
      target: base
      dockerfile: ./database_1/Dockerfile
    env_file: .env
    environment:
      - TZ=America/Argentina/Buenos_Aires
      - POSTGRES_USER=${DB1_USER}
      - POSTGRES_PASSWORD=${DB1_PASSWORD}
      - POSTGRES_DB=${DB1_NAME}
    restart: always
    ports:
      - ${DB1_PORT}:5432
    volumes:
      - ./database_1/database/data:/var/lib/postgresql/data
      - ./database_1/backups:/backups
    extra_hosts:
      - host.docker.internal:host-gateway

  nest_db:
    container_name: nest_db
    image: nest_db:1.0.0
    build:
      context: .
      target: base
      dockerfile: ./database_2/Dockerfile
    env_file: .env
    environment:
      - TZ=America/Argentina/Buenos_Aires
      - POSTGRES_USER=${DB2_USER}
      - POSTGRES_PASSWORD=${DB2_PASSWORD}
      - POSTGRES_DB=${DB2_NAME}
    restart: always
    ports:
      - ${DB2_PORT}:5432
    volumes:
      - ./database_2/database/data:/var/lib/postgresql/data
      - ./database_2/backups:/backups
    extra_hosts:
      - host.docker.internal:host-gateway

  # laravel_db:
  #   container_name: laravel_db
  #   image: laravel_db:1.0.0
  #   build:
  #     context: .
  #     target: base
  #     dockerfile: ./database_3/Dockerfile
  #   env_file: .env
  #   environment:
  #     - TZ=America/Argentina/Buenos_Aires
  #     - POSTGRES_USER=${DB3_USER}
  #     - POSTGRES_PASSWORD=${DB3_PASSWORD}
  #     - POSTGRES_DB=${DB3_NAME}
  #   restart: always
  #   ports:
  #     - ${DB3_PORT}:5432
  #   volumes:
  #     - ./database_3/database/data:/var/lib/postgresql/data
  #     - ./database_3/backups:/backups
  #   extra_hosts:
  #     - host.docker.internal:host-gateway

  keycloak:
    container_name: keycloak
    image: bitnami/keycloak:${KEYCLOAK_SERVER_VERSION}
    depends_on:
      - keycloak_db
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    env_file: .env
    environment:
      KEYCLOAK_HTTP_RELATIVE_PATH: /auth

      # Credentials for admin account
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      # Enable health and metrics support
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true

      # Credentials for storing into an external database
      KEYCLOAK_DATABASE_HOST: "host.docker.internal"
      KEYCLOAK_DATABASE_PORT: ${DB1_PORT}
      KEYCLOAK_DATABASE_NAME: ${DB1_NAME}
      KEYCLOAK_DATABASE_USER: ${DB1_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${DB1_PASSWORD}
    ports:
      - ${KEYCLOAK_PORT}:8080
    volumes:
      - ./keycloak/data:/opt/bitnami/keycloak/themes/identity
    extra_hosts:
      - host.docker.internal:host-gateway

  next_app:
    container_name: next_app
    image: next_app:1.0.0
    build:
      context: .
      target: base
      dockerfile: ./front_1/Dockerfile
    command: bash /start.sh
    restart: always
    env_file: .env
    environment:
      - PORT=${NEXT_PORT}
    ports:
      - ${NEXT_PORT}:${NEXT_PORT}
    volumes:
      - ./front_1/frontend:/app
      - ./front_1/start.sh:/start.sh
    extra_hosts:
      - host.docker.internal:host-gateway

  # react_app:
  #   container_name: react_app
  #   image: react_app:1.0.0
  #   build:
  #     context: .
  #     target: development
  #     dockerfile: ./front_2/Dockerfile
  #   command: bash -c "npm install && npm run start"
  #   restart: always
  #   env_file: .env
  #   environment:
  #     - PORT=${REACT_PORT}
  #   ports:
  #     - ${REACT_PORT}:${REACT_PORT}
  #   volumes:
  #     - ./front_2/frontend:/app
  #   extra_hosts:
  #     - host.docker.internal:host-gateway

  nest_api:
    container_name: nest_api
    image: nest_api:1.0.0
    build:
      context: .
      target: base
      dockerfile: ./back_1/Dockerfile
    command: bash -c "npm install && npm run start"
    depends_on:
      - nest_db
    restart: always
    env_file: .env
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=${DB2_PORT}
      - DB_NAME=${DB2_NAME}
      - DB_USER=${DB2_USER}
      - DB_PASSWORD=${DB2_PASSWORD}
    ports:
      - ${NEST_PORT}:3000
    volumes:
      - ./back_1/backend:/app
    extra_hosts:
      - host.docker.internal:host-gateway
